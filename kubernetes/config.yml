apiVersion: apps/v1
kind: Deployment
metadata:
  name: ${{ values.component_id }}
  namespace: web
spec:
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ${{ values.component_id }}
    spec:
      containers:
        - name: ${{ values.component_id }}
          image: { IMAGE }
          env:
            - name: NODE_ENV
              value: 'production'
            - name: PORT
              value: '3000'
          envFrom:
            - configMapRef:
                name: user-record-config
            - configMapRef:
                name: ${{ values.component_id }}-config
          ports:
            - containerPort: 3000
  selector:
    matchLabels:
      app: ${{ values.component_id }}
---
apiVersion: v1
kind: Service
metadata:
  name: ${{ values.component_id }}
  namespace: web
  labels:
    name: ${{ values.component_id }}
spec:
  ports:
    - port: 80
      targetPort: 3000
  type: ClusterIP
  selector:
    app: ${{ values.component_id }}
